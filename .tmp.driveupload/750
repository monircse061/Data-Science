{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from numpy import mean\n",
    "from numpy import std\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.metrics import accuracy_score,classification_report,confusion_matrix\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.svm import SVC\n",
    "from catboost import CatBoostClassifier\n",
    "from sklearn import preprocessing\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.model_selection import KFold\n",
    "from sklearn.model_selection import cross_val_score\n",
    "from sklearn.model_selection import RepeatedStratifiedKFold\n",
    "import shap\n",
    "df = pd.read_csv('C:/Users/m/Desktop/Thesis Tasks/Jupyter Lab/Mental Health/Mental health 2Class.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "      <th>Mental_Health_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Urban</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Rural</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Absent</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Female</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Rural</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Urban</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>Male</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Rural</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Poor</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>Male</td>\n",
       "      <td>No</td>\n",
       "      <td>Rural</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Yes</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>No</td>\n",
       "      <td>Better</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender Worry_about_social_support_during_covid19 Residence  \\\n",
       "0      Male                                       Yes     Urban   \n",
       "1      Male                                       Yes     Rural   \n",
       "2      Male                                       Yes     Urban   \n",
       "3    Female                                       Yes     Urban   \n",
       "4      Male                                       Yes     Urban   \n",
       "..      ...                                       ...       ...   \n",
       "248    Male                                       Yes     Urban   \n",
       "249    Male                                       Yes     Rural   \n",
       "250    Male                                        No     Urban   \n",
       "251    Male                                       Yes     Rural   \n",
       "252    Male                                        No     Rural   \n",
       "\n",
       "    Stable_family_income Living_with_parents  \\\n",
       "0                     No                 Yes   \n",
       "1                    Yes                 Yes   \n",
       "2                    Yes                  No   \n",
       "3                    Yes                 Yes   \n",
       "4                    Yes                 Yes   \n",
       "..                   ...                 ...   \n",
       "248                  Yes                 Yes   \n",
       "249                   No                 Yes   \n",
       "250                  Yes                 Yes   \n",
       "251                   No                  No   \n",
       "252                   No                  No   \n",
       "\n",
       "    Relative_or_acquaintance_infected_with_covid19 Worry_about_academic_delay  \\\n",
       "0                                              Yes                        Yes   \n",
       "1                                              Yes                        Yes   \n",
       "2                                              Yes                        Yes   \n",
       "3                                               No                        Yes   \n",
       "4                                               No                        Yes   \n",
       "..                                             ...                        ...   \n",
       "248                                            Yes                        Yes   \n",
       "249                                            Yes                        Yes   \n",
       "250                                             No                        Yes   \n",
       "251                                             No                        Yes   \n",
       "252                                             No                        Yes   \n",
       "\n",
       "    Disruption_of_daily_life Exercise_during_covid19 Own_income  \\\n",
       "0                        Yes                      No        Yes   \n",
       "1                        Yes                      No         No   \n",
       "2                        Yes                      No         No   \n",
       "3                        Yes                      No         No   \n",
       "4                        Yes                      No         No   \n",
       "..                       ...                     ...        ...   \n",
       "248                      Yes                     Yes         No   \n",
       "249                      Yes                      No         No   \n",
       "250                      Yes                      No         No   \n",
       "251                      Yes                      No         No   \n",
       "252                       No                      No         No   \n",
       "\n",
       "    Quarrel_between_parents  Sleep_status_hour_during_covid19  \\\n",
       "0                        No                                 2   \n",
       "1                        No                                 2   \n",
       "2                    Absent                                 1   \n",
       "3                       Yes                                 2   \n",
       "4                        No                                 3   \n",
       "..                      ...                               ...   \n",
       "248                      No                                 1   \n",
       "249                      No                                 2   \n",
       "250                      No                                 2   \n",
       "251                      No                                 2   \n",
       "252                      No                                 2   \n",
       "\n",
       "     Internet_browsing_hours_during_covid19  \\\n",
       "0                                         3   \n",
       "1                                         4   \n",
       "2                                         3   \n",
       "3                                         3   \n",
       "4                                         4   \n",
       "..                                      ...   \n",
       "248                                       4   \n",
       "249                                       3   \n",
       "250                                       3   \n",
       "251                                       4   \n",
       "252                                       1   \n",
       "\n",
       "    Fear_of_getting_infected_with_covid19 Mental_Health_Status  \n",
       "0                                     Yes               Better  \n",
       "1                                     Yes               Better  \n",
       "2                                     Yes               Better  \n",
       "3                                     Yes                 Poor  \n",
       "4                                     Yes               Better  \n",
       "..                                    ...                  ...  \n",
       "248                                   Yes               Better  \n",
       "249                                   Yes               Better  \n",
       "250                                   Yes               Better  \n",
       "251                                   Yes                 Poor  \n",
       "252                                    No               Better  \n",
       "\n",
       "[253 rows x 15 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gender                                            0\n",
       "Worry_about_social_support_during_covid19         0\n",
       "Residence                                         0\n",
       "Stable_family_income                              0\n",
       "Living_with_parents                               0\n",
       "Relative_or_acquaintance_infected_with_covid19    0\n",
       "Worry_about_academic_delay                        0\n",
       "Disruption_of_daily_life                          0\n",
       "Exercise_during_covid19                           0\n",
       "Own_income                                        0\n",
       "Quarrel_between_parents                           0\n",
       "Sleep_status_hour_during_covid19                  0\n",
       "Internet_browsing_hours_during_covid19            0\n",
       "Fear_of_getting_infected_with_covid19             0\n",
       "Mental_Health_Status                              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 253 entries, 0 to 252\n",
      "Data columns (total 15 columns):\n",
      " #   Column                                          Non-Null Count  Dtype \n",
      "---  ------                                          --------------  ----- \n",
      " 0   Gender                                          253 non-null    object\n",
      " 1   Worry_about_social_support_during_covid19       253 non-null    object\n",
      " 2   Residence                                       253 non-null    object\n",
      " 3   Stable_family_income                            253 non-null    object\n",
      " 4   Living_with_parents                             253 non-null    object\n",
      " 5   Relative_or_acquaintance_infected_with_covid19  253 non-null    object\n",
      " 6   Worry_about_academic_delay                      253 non-null    object\n",
      " 7   Disruption_of_daily_life                        253 non-null    object\n",
      " 8   Exercise_during_covid19                         253 non-null    object\n",
      " 9   Own_income                                      253 non-null    object\n",
      " 10  Quarrel_between_parents                         253 non-null    object\n",
      " 11  Sleep_status_hour_during_covid19                253 non-null    int64 \n",
      " 12  Internet_browsing_hours_during_covid19          253 non-null    int64 \n",
      " 13  Fear_of_getting_infected_with_covid19           253 non-null    object\n",
      " 14  Mental_Health_Status                            253 non-null    object\n",
      "dtypes: int64(2), object(13)\n",
      "memory usage: 29.8+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Output column unique value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Better    166\n",
       "Poor       87\n",
       "Name: Mental_Health_Status, dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.Mental_Health_Status.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.pie(df.Mental_Health_Status.value_counts(), labels = ['Better','Poor'],colors = ['#FF5733','#FFBF00'],autopct='%1.1f%%',shadow=True, explode=(0.05, 0.05))\n",
    "plt.title('Mental Health Status')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# print_unique_col_values(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Label Encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "label_encoder =  preprocessing.LabelEncoder()\n",
    "df['Gender'] = label_encoder.fit_transform(df['Gender'])\n",
    "df['Worry_about_social_support_during_covid19'] = label_encoder.fit_transform(df['Worry_about_social_support_during_covid19'])\n",
    "df['Residence'] = label_encoder.fit_transform(df['Residence'])\n",
    "df['Stable_family_income'] = label_encoder.fit_transform(df['Stable_family_income'])\n",
    "df['Living_with_parents'] = label_encoder.fit_transform(df['Living_with_parents'])\n",
    "df['Relative_or_acquaintance_infected_with_covid19'] = label_encoder.fit_transform(df['Relative_or_acquaintance_infected_with_covid19'])\n",
    "df['Worry_about_academic_delay'] = label_encoder.fit_transform(df['Worry_about_academic_delay'])\n",
    "df['Disruption_of_daily_life'] = label_encoder.fit_transform(df['Disruption_of_daily_life'])\n",
    "df['Exercise_during_covid19'] = label_encoder.fit_transform(df['Exercise_during_covid19'])\n",
    "df['Own_income'] = label_encoder.fit_transform(df['Own_income'])\n",
    "df['Quarrel_between_parents'] = label_encoder.fit_transform(df['Quarrel_between_parents'])\n",
    "df['Fear_of_getting_infected_with_covid19'] = label_encoder.fit_transform(df['Fear_of_getting_infected_with_covid19'])\n",
    "df['Mental_Health_Status'] = label_encoder.fit_transform(df['Mental_Health_Status'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "      <th>Mental_Health_Status</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "248       1                                          1          1   \n",
       "249       1                                          1          0   \n",
       "250       1                                          0          1   \n",
       "251       1                                          1          0   \n",
       "252       1                                          0          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "248                     1                    1   \n",
       "249                     0                    1   \n",
       "250                     1                    1   \n",
       "251                     0                    0   \n",
       "252                     0                    0   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "248                                               1   \n",
       "249                                               1   \n",
       "250                                               0   \n",
       "251                                               0   \n",
       "252                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "248                           1                         1   \n",
       "249                           1                         1   \n",
       "250                           1                         1   \n",
       "251                           1                         1   \n",
       "252                           1                         0   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "248                        1           0                        1   \n",
       "249                        0           0                        1   \n",
       "250                        0           0                        1   \n",
       "251                        0           0                        1   \n",
       "252                        0           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Internet_browsing_hours_during_covid19  \\\n",
       "0                                   2                                       3   \n",
       "1                                   2                                       4   \n",
       "2                                   1                                       3   \n",
       "3                                   2                                       3   \n",
       "4                                   3                                       4   \n",
       "..                                ...                                     ...   \n",
       "248                                 1                                       4   \n",
       "249                                 2                                       3   \n",
       "250                                 2                                       3   \n",
       "251                                 2                                       4   \n",
       "252                                 2                                       1   \n",
       "\n",
       "     Fear_of_getting_infected_with_covid19  Mental_Health_Status  \n",
       "0                                        1                     0  \n",
       "1                                        1                     0  \n",
       "2                                        1                     0  \n",
       "3                                        1                     1  \n",
       "4                                        1                     0  \n",
       "..                                     ...                   ...  \n",
       "248                                      1                     0  \n",
       "249                                      1                     0  \n",
       "250                                      1                     0  \n",
       "251                                      1                     1  \n",
       "252                                      0                     0  \n",
       "\n",
       "[253 rows x 15 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Split target and input variable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df.drop(['Mental_Health_Status'],axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "248       1                                          1          1   \n",
       "249       1                                          1          0   \n",
       "250       1                                          0          1   \n",
       "251       1                                          1          0   \n",
       "252       1                                          0          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "248                     1                    1   \n",
       "249                     0                    1   \n",
       "250                     1                    1   \n",
       "251                     0                    0   \n",
       "252                     0                    0   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "248                                               1   \n",
       "249                                               1   \n",
       "250                                               0   \n",
       "251                                               0   \n",
       "252                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "248                           1                         1   \n",
       "249                           1                         1   \n",
       "250                           1                         1   \n",
       "251                           1                         1   \n",
       "252                           1                         0   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "248                        1           0                        1   \n",
       "249                        0           0                        1   \n",
       "250                        0           0                        1   \n",
       "251                        0           0                        1   \n",
       "252                        0           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Internet_browsing_hours_during_covid19  \\\n",
       "0                                   2                                       3   \n",
       "1                                   2                                       4   \n",
       "2                                   1                                       3   \n",
       "3                                   2                                       3   \n",
       "4                                   3                                       4   \n",
       "..                                ...                                     ...   \n",
       "248                                 1                                       4   \n",
       "249                                 2                                       3   \n",
       "250                                 2                                       3   \n",
       "251                                 2                                       4   \n",
       "252                                 2                                       1   \n",
       "\n",
       "     Fear_of_getting_infected_with_covid19  \n",
       "0                                        1  \n",
       "1                                        1  \n",
       "2                                        1  \n",
       "3                                        1  \n",
       "4                                        1  \n",
       "..                                     ...  \n",
       "248                                      1  \n",
       "249                                      1  \n",
       "250                                      1  \n",
       "251                                      1  \n",
       "252                                      0  \n",
       "\n",
       "[253 rows x 14 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "248       1                                          1          1   \n",
       "249       1                                          1          0   \n",
       "250       1                                          0          1   \n",
       "251       1                                          1          0   \n",
       "252       1                                          0          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "248                     1                    1   \n",
       "249                     0                    1   \n",
       "250                     1                    1   \n",
       "251                     0                    0   \n",
       "252                     0                    0   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "248                                               1   \n",
       "249                                               1   \n",
       "250                                               0   \n",
       "251                                               0   \n",
       "252                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "248                           1                         1   \n",
       "249                           1                         1   \n",
       "250                           1                         1   \n",
       "251                           1                         1   \n",
       "252                           1                         0   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "248                        1           0                        1   \n",
       "249                        0           0                        1   \n",
       "250                        0           0                        1   \n",
       "251                        0           0                        1   \n",
       "252                        0           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Internet_browsing_hours_during_covid19  \\\n",
       "0                                   2                                       3   \n",
       "1                                   2                                       4   \n",
       "2                                   1                                       3   \n",
       "3                                   2                                       3   \n",
       "4                                   3                                       4   \n",
       "..                                ...                                     ...   \n",
       "248                                 1                                       4   \n",
       "249                                 2                                       3   \n",
       "250                                 2                                       3   \n",
       "251                                 2                                       4   \n",
       "252                                 2                                       1   \n",
       "\n",
       "     Fear_of_getting_infected_with_covid19  \n",
       "0                                        1  \n",
       "1                                        1  \n",
       "2                                        1  \n",
       "3                                        1  \n",
       "4                                        1  \n",
       "..                                     ...  \n",
       "248                                      1  \n",
       "249                                      1  \n",
       "250                                      1  \n",
       "251                                      1  \n",
       "252                                      0  \n",
       "\n",
       "[253 rows x 14 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "xx = x.copy()\n",
    "xx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0\n",
       "1      0\n",
       "2      0\n",
       "3      1\n",
       "4      0\n",
       "      ..\n",
       "248    0\n",
       "249    0\n",
       "250    0\n",
       "251    1\n",
       "252    0\n",
       "Name: Mental_Health_Status, Length: 253, dtype: int32"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = df['Mental_Health_Status']\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    166\n",
       "1     87\n",
       "Name: Mental_Health_Status, dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Split dataset into train and test sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "xtrain,xtest,ytrain,ytest = train_test_split(x,y,test_size=.2,random_state=43 )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Model Apply ( RF)    ( Without Oversampling )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=20, random_state=51)"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rnf = RandomForestClassifier(n_estimators=20, random_state=51)\n",
    "rnf.fit(xtrain,ytrain)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Accuracy :  0.9702970297029703\n",
      "\n",
      "Testing Accuracy :  0.7058823529411765\n",
      "\n",
      "Repeated 10-Folds Cross-Validation for Model Evaluation :\n",
      "\n",
      "Mean Accuracy: 0.643 (0.062)\n"
     ]
    }
   ],
   "source": [
    "# Accuracy on Training \n",
    "predictions_train = rnf.predict(xtrain)\n",
    "print(\"\\nTraining Accuracy : \", accuracy_score(ytrain,predictions_train))\n",
    "# Accuracy on Testing\n",
    "predictions_test = rnf.predict(xtest)\n",
    "print(\"\\nTesting Accuracy : \", accuracy_score(ytest,predictions_test))\n",
    "\n",
    "# define the evaluation method\n",
    "print('\\nRepeated 10-Folds Cross-Validation for Model Evaluation :\\n')\n",
    "cv = RepeatedStratifiedKFold(n_splits=10, n_repeats=3, random_state=1)\n",
    "# evaluate the model on the dataset\n",
    "n_scores = cross_val_score(rnf, x, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
    "# report performance\n",
    "print('Mean Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Univariate Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Univariate Selection\n",
    "from sklearn.feature_selection import SelectKBest\n",
    "from sklearn.feature_selection import chi2\n",
    "from sklearn.feature_selection import f_classif"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "#apply SelectKBest class to extract top 10 best features\n",
    "bestfeatures = SelectKBest(score_func = f_classif, k=14)\n",
    "fit = bestfeatures.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "dfscores = pd.DataFrame(fit.scores_)\n",
    "dfcolumns = pd.DataFrame(x.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                          Features      Score\n",
      "10                         Quarrel_between_parents  18.194640\n",
      "1        Worry_about_social_support_during_covid19  17.350977\n",
      "7                         Disruption_of_daily_life  13.768983\n",
      "3                             Stable_family_income   7.531769\n",
      "13           Fear_of_getting_infected_with_covid19   6.177596\n",
      "9                                       Own_income   5.082824\n",
      "6                       Worry_about_academic_delay   3.392052\n",
      "8                          Exercise_during_covid19   1.628021\n",
      "11                Sleep_status_hour_during_covid19   0.987650\n",
      "4                              Living_with_parents   0.747179\n",
      "5   Relative_or_acquaintance_infected_with_covid19   0.633973\n",
      "2                                        Residence   0.299108\n",
      "0                                           Gender   0.202571\n",
      "12          Internet_browsing_hours_during_covid19   0.078757\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#concat two dataframes for better visualization \n",
    "featureScores = pd.concat([dfcolumns,dfscores],axis=1)\n",
    "featureScores.columns = ['Features','Score']  #naming the dataframe columns\n",
    "print(featureScores.nlargest(14,'Score')) \n",
    "\n",
    "featureScores = featureScores.nlargest(14,'Score')\n",
    "featureScores.plot(kind ='barh')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "features = df.columns[0:14]\n",
    "new_df = pd.Series(bestfeatures.scores_, features)\n",
    "\n",
    "plt.figure(figsize=(10,10))\n",
    "new_df.nlargest(14).plot(kind = 'barh',width=0.8, align='center', color='skyblue', zorder=5)\n",
    "plt.ylabel(\"Features\")\n",
    "plt.xlabel(\"scores\")\n",
    "plt.title(\"Features with scores\")\n",
    "plt.grid(True)\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>251</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>253 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "248       1                                          1          1   \n",
       "249       1                                          1          0   \n",
       "250       1                                          0          1   \n",
       "251       1                                          1          0   \n",
       "252       1                                          0          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "248                     1                    1   \n",
       "249                     0                    1   \n",
       "250                     1                    1   \n",
       "251                     0                    0   \n",
       "252                     0                    0   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "248                                               1   \n",
       "249                                               1   \n",
       "250                                               0   \n",
       "251                                               0   \n",
       "252                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "248                           1                         1   \n",
       "249                           1                         1   \n",
       "250                           1                         1   \n",
       "251                           1                         1   \n",
       "252                           1                         0   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "248                        1           0                        1   \n",
       "249                        0           0                        1   \n",
       "250                        0           0                        1   \n",
       "251                        0           0                        1   \n",
       "252                        0           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Fear_of_getting_infected_with_covid19  \n",
       "0                                   2                                      1  \n",
       "1                                   2                                      1  \n",
       "2                                   1                                      1  \n",
       "3                                   2                                      1  \n",
       "4                                   3                                      1  \n",
       "..                                ...                                    ...  \n",
       "248                                 1                                      1  \n",
       "249                                 2                                      1  \n",
       "250                                 2                                      1  \n",
       "251                                 2                                      1  \n",
       "252                                 2                                      0  \n",
       "\n",
       "[253 rows x 13 columns]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = df.drop(['Internet_browsing_hours_during_covid19','Mental_Health_Status'],axis = 1) \n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0\n",
       "1      0\n",
       "2      0\n",
       "3      1\n",
       "4      0\n",
       "      ..\n",
       "248    0\n",
       "249    0\n",
       "250    0\n",
       "251    1\n",
       "252    0\n",
       "Name: Mental_Health_Status, Length: 253, dtype: int32"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = df['Mental_Health_Status']\n",
    "y"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Train and test sets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=.2,random_state = 2021 )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# RF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rnf = RandomForestClassifier(n_estimators=30, random_state=40)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=30, random_state=40)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rnf.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Accuracy :  0.9257425742574258\n",
      "\n",
      "Testing Accuracy :  0.8627450980392157\n",
      "\n",
      "Repeated 5-Folds Cross-Validation for Model Evaluation :\n",
      "\n",
      "Mean Accuracy: 0.640 (0.007)\n"
     ]
    }
   ],
   "source": [
    "# Accuracy on Training \n",
    "predictions_train = rnf.predict(x_train)\n",
    "print(\"\\nTraining Accuracy : \", accuracy_score(y_train,predictions_train))\n",
    "# Accuracy on Testing\n",
    "predictions_test = rnf.predict(x_test)\n",
    "print(\"\\nTesting Accuracy : \", accuracy_score(y_test,predictions_test))\n",
    "\n",
    "# define the evaluation method\n",
    "print('\\nRepeated 5-Folds Cross-Validation for Model Evaluation :\\n')\n",
    "cv = RepeatedStratifiedKFold(n_splits=3, n_repeats=1, random_state=1)\n",
    "# evaluate the model on the dataset\n",
    "n_scores = cross_val_score(rnf, x, y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
    "# report performance\n",
    "print('Mean Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# With Oversampling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "from imblearn.over_sampling import RandomOverSampler\n",
    "ros = RandomOverSampler(random_state=0)\n",
    "X, Y = ros.fit_sample(xx, y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>332 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "327       1                                          1          0   \n",
       "328       1                                          1          0   \n",
       "329       1                                          1          0   \n",
       "330       1                                          1          1   \n",
       "331       1                                          1          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "327                     0                    1   \n",
       "328                     1                    1   \n",
       "329                     0                    1   \n",
       "330                     1                    1   \n",
       "331                     0                    1   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "327                                               0   \n",
       "328                                               1   \n",
       "329                                               0   \n",
       "330                                               1   \n",
       "331                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "327                           1                         1   \n",
       "328                           1                         1   \n",
       "329                           1                         1   \n",
       "330                           1                         1   \n",
       "331                           1                         1   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "327                        0           0                        1   \n",
       "328                        1           0                        1   \n",
       "329                        0           0                        1   \n",
       "330                        0           0                        1   \n",
       "331                        1           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Internet_browsing_hours_during_covid19  \\\n",
       "0                                   2                                       3   \n",
       "1                                   2                                       4   \n",
       "2                                   1                                       3   \n",
       "3                                   2                                       3   \n",
       "4                                   3                                       4   \n",
       "..                                ...                                     ...   \n",
       "327                                 3                                       2   \n",
       "328                                 2                                       1   \n",
       "329                                 3                                       2   \n",
       "330                                 2                                       4   \n",
       "331                                 1                                       3   \n",
       "\n",
       "     Fear_of_getting_infected_with_covid19  \n",
       "0                                        1  \n",
       "1                                        1  \n",
       "2                                        1  \n",
       "3                                        1  \n",
       "4                                        1  \n",
       "..                                     ...  \n",
       "327                                      1  \n",
       "328                                      1  \n",
       "329                                      1  \n",
       "330                                      1  \n",
       "331                                      1  \n",
       "\n",
       "[332 rows x 14 columns]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    166\n",
       "0    166\n",
       "Name: Mental_Health_Status, dtype: int64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=.2,random_state = 2021 )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# RF"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=30, random_state=40)"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rnf = RandomForestClassifier(n_estimators=30, random_state=40)\n",
    "rnf.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Accuracy :  0.9735849056603774\n",
      "\n",
      "Testing Accuracy :  0.7910447761194029\n"
     ]
    }
   ],
   "source": [
    "# Accuracy on Training \n",
    "predictions_train = rnf.predict(x_train)\n",
    "print(\"\\nTraining Accuracy : \", accuracy_score(y_train,predictions_train))\n",
    "# Accuracy on Testing\n",
    "predictions_test = rnf.predict(x_test)\n",
    "print(\"\\nTesting Accuracy : \", accuracy_score(y_test,predictions_test))\n",
    "\n",
    "\n",
    "# # define the evaluation method\n",
    "# print('\\nRepeated 5-Folds Cross-Validation for Model Evaluation :\\n')\n",
    "# cv = RepeatedStratifiedKFold(n_splits=5, n_repeats=3, random_state=1)\n",
    "# # evaluate the model on the dataset\n",
    "# n_scores = cross_val_score(rnf, X, Y, scoring='accuracy', cv=cv, n_jobs=-1)\n",
    "# # report performance\n",
    "# print('Mean Accuracy: %.3f (%.3f)' % (mean(n_scores), std(n_scores)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "X= X.drop(['Internet_browsing_hours_during_covid19'],axis = 1) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0\n",
       "1      0\n",
       "2      0\n",
       "3      1\n",
       "4      0\n",
       "      ..\n",
       "327    1\n",
       "328    1\n",
       "329    1\n",
       "330    1\n",
       "331    1\n",
       "Name: Mental_Health_Status, Length: 332, dtype: int32"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>327</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>329</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>332 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "0         1                                          1          1   \n",
       "1         1                                          1          0   \n",
       "2         1                                          1          1   \n",
       "3         0                                          1          1   \n",
       "4         1                                          1          1   \n",
       "..      ...                                        ...        ...   \n",
       "327       1                                          1          0   \n",
       "328       1                                          1          0   \n",
       "329       1                                          1          0   \n",
       "330       1                                          1          1   \n",
       "331       1                                          1          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "0                       0                    1   \n",
       "1                       1                    1   \n",
       "2                       1                    0   \n",
       "3                       1                    1   \n",
       "4                       1                    1   \n",
       "..                    ...                  ...   \n",
       "327                     0                    1   \n",
       "328                     1                    1   \n",
       "329                     0                    1   \n",
       "330                     1                    1   \n",
       "331                     0                    1   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "0                                                 1   \n",
       "1                                                 1   \n",
       "2                                                 1   \n",
       "3                                                 0   \n",
       "4                                                 0   \n",
       "..                                              ...   \n",
       "327                                               0   \n",
       "328                                               1   \n",
       "329                                               0   \n",
       "330                                               1   \n",
       "331                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "0                             1                         1   \n",
       "1                             1                         1   \n",
       "2                             1                         1   \n",
       "3                             1                         1   \n",
       "4                             1                         1   \n",
       "..                          ...                       ...   \n",
       "327                           1                         1   \n",
       "328                           1                         1   \n",
       "329                           1                         1   \n",
       "330                           1                         1   \n",
       "331                           1                         1   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "0                          0           1                        1   \n",
       "1                          0           0                        1   \n",
       "2                          0           0                        0   \n",
       "3                          0           0                        2   \n",
       "4                          0           0                        1   \n",
       "..                       ...         ...                      ...   \n",
       "327                        0           0                        1   \n",
       "328                        1           0                        1   \n",
       "329                        0           0                        1   \n",
       "330                        0           0                        1   \n",
       "331                        1           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Fear_of_getting_infected_with_covid19  \n",
       "0                                   2                                      1  \n",
       "1                                   2                                      1  \n",
       "2                                   1                                      1  \n",
       "3                                   2                                      1  \n",
       "4                                   3                                      1  \n",
       "..                                ...                                    ...  \n",
       "327                                 3                                      1  \n",
       "328                                 2                                      1  \n",
       "329                                 3                                      1  \n",
       "330                                 2                                      1  \n",
       "331                                 1                                      1  \n",
       "\n",
       "[332 rows x 13 columns]"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=.2,random_state = 2021 )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=125, random_state=40)"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "rnf = RandomForestClassifier(n_estimators=125, random_state=40)\n",
    "rnf.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Accuracy :  0.9433962264150944\n",
      "\n",
      "Testing Accuracy :  0.7910447761194029\n"
     ]
    }
   ],
   "source": [
    "# Accuracy on Training \n",
    "predictions_train = rnf.predict(x_train)\n",
    "print(\"\\nTraining Accuracy : \", accuracy_score(y_train,predictions_train))\n",
    "# Accuracy on Testing\n",
    "predictions_test = rnf.predict(x_test)\n",
    "print(\"\\nTesting Accuracy : \", accuracy_score(y_test,predictions_test))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# With Oversampling (Another Method )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "class 0(Better): (166, 15)\n",
      "class 1(Poor): (87, 15)\n"
     ]
    }
   ],
   "source": [
    "# Divide by class\n",
    "class_count_0, class_count_1 = df['Mental_Health_Status'].value_counts()\n",
    "df_class_0 = df[df['Mental_Health_Status'] == 0]\n",
    "df_class_1 = df[df['Mental_Health_Status'] == 1]\n",
    "\n",
    "print('class 0(Better):', df_class_0.shape)\n",
    "print('class 1(Poor):', df_class_1.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1    166\n",
      "0    166\n",
      "Name: Mental_Health_Status, dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'count (target)'}>"
      ]
     },
     "execution_count": 269,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "class_1_over = df_class_1.sample(class_count_0, replace=True)\n",
    "\n",
    "test_over = pd.concat([class_1_over, df_class_0], axis=0)\n",
    "\n",
    "print(test_over['Mental_Health_Status'].value_counts())\n",
    "\n",
    "test_over['Mental_Health_Status'].value_counts().plot(kind='bar', title='count (target)')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Gender</th>\n",
       "      <th>Worry_about_social_support_during_covid19</th>\n",
       "      <th>Residence</th>\n",
       "      <th>Stable_family_income</th>\n",
       "      <th>Living_with_parents</th>\n",
       "      <th>Relative_or_acquaintance_infected_with_covid19</th>\n",
       "      <th>Worry_about_academic_delay</th>\n",
       "      <th>Disruption_of_daily_life</th>\n",
       "      <th>Exercise_during_covid19</th>\n",
       "      <th>Own_income</th>\n",
       "      <th>Quarrel_between_parents</th>\n",
       "      <th>Sleep_status_hour_during_covid19</th>\n",
       "      <th>Internet_browsing_hours_during_covid19</th>\n",
       "      <th>Fear_of_getting_infected_with_covid19</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>177</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>236</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>246</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>248</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>249</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>250</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>252</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>332 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Gender  Worry_about_social_support_during_covid19  Residence  \\\n",
       "145       1                                          1          1   \n",
       "96        1                                          1          0   \n",
       "177       1                                          1          0   \n",
       "236       1                                          1          1   \n",
       "88        1                                          0          0   \n",
       "..      ...                                        ...        ...   \n",
       "246       1                                          1          0   \n",
       "248       1                                          1          1   \n",
       "249       1                                          1          0   \n",
       "250       1                                          0          1   \n",
       "252       1                                          0          0   \n",
       "\n",
       "     Stable_family_income  Living_with_parents  \\\n",
       "145                     1                    1   \n",
       "96                      0                    0   \n",
       "177                     0                    1   \n",
       "236                     0                    0   \n",
       "88                      0                    1   \n",
       "..                    ...                  ...   \n",
       "246                     0                    1   \n",
       "248                     1                    1   \n",
       "249                     0                    1   \n",
       "250                     1                    1   \n",
       "252                     0                    0   \n",
       "\n",
       "     Relative_or_acquaintance_infected_with_covid19  \\\n",
       "145                                               1   \n",
       "96                                                0   \n",
       "177                                               0   \n",
       "236                                               0   \n",
       "88                                                1   \n",
       "..                                              ...   \n",
       "246                                               0   \n",
       "248                                               1   \n",
       "249                                               1   \n",
       "250                                               0   \n",
       "252                                               0   \n",
       "\n",
       "     Worry_about_academic_delay  Disruption_of_daily_life  \\\n",
       "145                           1                         1   \n",
       "96                            1                         1   \n",
       "177                           0                         0   \n",
       "236                           1                         1   \n",
       "88                            1                         1   \n",
       "..                          ...                       ...   \n",
       "246                           1                         1   \n",
       "248                           1                         1   \n",
       "249                           1                         1   \n",
       "250                           1                         1   \n",
       "252                           1                         0   \n",
       "\n",
       "     Exercise_during_covid19  Own_income  Quarrel_between_parents  \\\n",
       "145                        0           0                        1   \n",
       "96                         0           0                        2   \n",
       "177                        1           0                        1   \n",
       "236                        0           0                        1   \n",
       "88                         1           0                        2   \n",
       "..                       ...         ...                      ...   \n",
       "246                        0           0                        1   \n",
       "248                        1           0                        1   \n",
       "249                        0           0                        1   \n",
       "250                        0           0                        1   \n",
       "252                        0           0                        1   \n",
       "\n",
       "     Sleep_status_hour_during_covid19  Internet_browsing_hours_during_covid19  \\\n",
       "145                                 2                                       4   \n",
       "96                                  2                                       3   \n",
       "177                                 3                                       3   \n",
       "236                                 3                                       4   \n",
       "88                                  2                                       3   \n",
       "..                                ...                                     ...   \n",
       "246                                 3                                       3   \n",
       "248                                 1                                       4   \n",
       "249                                 2                                       3   \n",
       "250                                 2                                       3   \n",
       "252                                 2                                       1   \n",
       "\n",
       "     Fear_of_getting_infected_with_covid19  \n",
       "145                                      1  \n",
       "96                                       0  \n",
       "177                                      0  \n",
       "236                                      1  \n",
       "88                                       1  \n",
       "..                                     ...  \n",
       "246                                      1  \n",
       "248                                      1  \n",
       "249                                      1  \n",
       "250                                      1  \n",
       "252                                      0  \n",
       "\n",
       "[332 rows x 14 columns]"
      ]
     },
     "execution_count": 271,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x = test_over.drop(['Mental_Health_Status'], axis =1)\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      0\n",
       "1      0\n",
       "2      0\n",
       "3      1\n",
       "4      0\n",
       "      ..\n",
       "248    0\n",
       "249    0\n",
       "250    0\n",
       "251    1\n",
       "252    0\n",
       "Name: Mental_Health_Status, Length: 253, dtype: int32"
      ]
     },
     "execution_count": 272,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y = df['Mental_Health_Status']\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 273,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test = train_test_split(X,Y,test_size=.2,random_state = 2021 )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(n_estimators=125, random_state=40)"
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rnf = RandomForestClassifier(n_estimators=125, random_state=40)\n",
    "rnf.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Training Accuracy :  0.9433962264150944\n",
      "\n",
      "Testing Accuracy :  0.7910447761194029\n"
     ]
    }
   ],
   "source": [
    "# Accuracy on Training \n",
    "predictions_train = rnf.predict(x_train)\n",
    "print(\"\\nTraining Accuracy : \", accuracy_score(y_train,predictions_train))\n",
    "# Accuracy on Testing\n",
    "predictions_test = rnf.predict(x_test)\n",
    "print(\"\\nTesting Accuracy : \", accuracy_score(y_test,predictions_test))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
